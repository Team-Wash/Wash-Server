openapi: 3.0.0
info:
  title: 홈 관련 API
  version: 1.0.0

paths:
  /folders:
    get:
      summary: 전체 폴더 조회하기
      description: 사용자가 보유하고 있는 모든 폴더 목록을 조회합니다.
      tags:
        - 홈
      responses:
        '200':
          description: 폴더 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    isSuccess:
                      type: boolean
                      example: true
                    code:
                      type: integer
                      example: 2000
                    message:
                      type: string
                      example: "success!"
                    result:
                      type: array
                      description: 폴더 목록 데이터
                      items:
                        type: object
                        properties:
                          folderId:
                            type: integer
                            description: 폴더 ID
                            example: 1
                          folderName:
                            type: string
                            description: 폴더 이름
                            example: "수학"
                          orderValue:
                            type: integer
                            description: 폴더 배치 순서
                            example: 0
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
    
    post:
      summary: 폴더 추가하기
      description: 새로운 폴더를 추가합니다
      tags:
        - 홈
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folderName:
                  type: string
                  description: 생성할 폴더의 이름
                  example: "새 폴더"
      responses:
        '200':
          description: 폴더 추가 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "폴더 추가 성공"
                  result:
                    type: object
                    properties:
                      folderId:
                        type: integer
                        description: 생성된 폴더의 ID
                        example: 123
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"

  /folders/order:
    patch:
      summary: 전체 폴더 배치 조정하기
      description: 폴더 디스플레이 순서를 조정합니다.
      tags:
        - 홈
      requestBody:
        description: 폴더 순서 조정을 위한 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  items:
                    type: integer
                    description: 폴더 ID
                  description: 폴더 ID 배열, 원하는 순서대로 나열
                  example: [3, 1, 2]
      responses:
        '200':
          description: 폴더 순서 조정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: string
                    example: "폴더 순서 조정 성공"
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"     

  /folders/{folderId}:
    patch:
      summary: 폴더 이름 수정하기
      description: 폴더의 이름을 수정합니다.
      tags:
        - 홈
      parameters:
        - name: folderId
          in: path
          required: true
          schema:
            type: integer
            description: 폴더 ID
            example: 1
      requestBody:
        description: 폴더 이름 수정을 위한 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folderName:
                  type: string
                  description: 수정할 폴더 이름
                  example: "새 폴더 이름"
      responses:
        '200':
          description: 폴더 이름 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: string
                    example: "폴더 이름 수정 성공"
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  
    delete:
      summary: 폴더 삭제하기
      description: 폴더 ID를 사용해 폴더를 삭제한다.
      tags:
        - 홈
      parameters:
        - name: folderId
          in: path
          required: true
          schema:
            type: integer
            description: 폴더 ID
            example: 1
      responses:
        '200':
          description: 폴더 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: string
                    example: "폴더 삭제 성공"
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."

  /folders/{folderId}/problems:
    get:
      summary: 폴더 속 문제 미리보기
      description: 폴더를 선택하면 해당 폴더 안에 있는 문제들을 볼 수 있습니다.
      tags:
        - 홈
      parameters:
        - name: folderId
          in: path
          required: true
          schema:
            type: integer
            description: 폴더 ID
      responses:
        '200':
          description: 폴더 속 문제 미리보기 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: object
                    properties:
                      folderName:
                        type: string
                        description: 폴더 이름
                        example: "수학"
                      problems:
                        type: array
                        description: 폴더 내 문제 목록
                        items:
                          type: object
                          properties:
                            problemId:
                              type: integer
                              description: 문제 ID
                              example: 1
                            problemText:
                              type: string
                              description: 문제 텍스트
                              example: "2+4"
                            problemImage:
                              type: string
                              description: 문제 사진 URL
                              example: "http://example.com/image.png"
                            orderValue:
                              type: integer
                              description: 폴더 내 문제 배치 순서
                              example: 0
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."

  /problems:
    post:
      tags:
        - 홈
      summary: 문제 추가하기
      description: 문제 추가하기
      requestBody:
        description: 문제 추가를 위한 데이터
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                problemImage:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 문제 사진 (최소 1장 필수, 최대 1장)
                solutionImages:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 풀이 사진들 (최대 5장)
                passageImages:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 지문 사진들 (최대 10장)
                additionalImages:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 추가 사진들 (최대 2장)
                data:
                  type: string
                  format: json
                  description: 문제 정보(JSON 형식의 문자열)
                  example: '{"folderId":1,"problemText":"2+4","answer":"6","status":"작성","memo":"문제에 대한 추가 설명","mainTypeId":1,"midTypeId":2,"subTypeIds":[3,4]}'
      responses:
        '200':
          description: 문제 추가 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: object
                    properties:
                      problemId:
                        type: integer
                        example: 1
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"

  /problems/types:
    post:
      tags:
        - 홈
      summary: 문제 유형 추가
      description: >
        문제 유형을 추가합니다
        
        - `typeLevel`이 `1`일 경우: 대분류 문제 유형 추가
        - `typeLevel`이 `2`일 경우: 중분류 문제 유형 추가 (`parentTypeId` 필요)
        - `typeLevel`이 `3`일 경우: 소분류 문제 유형 추가 (`parentTypeId` 필요)
      requestBody:
        description: 문제 유형 추가 요청 본문
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                typeName:
                  type: string
                  description: 문제 유형 이름
                  example: "국어"
                parentTypeId:
                  type: integer
                  description: 상위 문제 유형의 ID (중분류와 소분류에서 필요)
                  example: 1
                typeLevel:
                  type: integer
                  description: 문제 유형 레벨
                  enum:
                    - 1
                    - 2
                    - 3
                  example: 2
      responses:
        '200':
          description: 문제 유형 추가 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: array
                    items:
                        type: object
                        properties:
                          typeId:
                            type: integer
                            ddescription: 생성된 유형 ID
                            example: 2
                          typeName:
                            type: string
                            description: 생성된 유형 이름
                            example: "국어"
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
  
  /problems/types/{typeLevel}:
    get:
      tags:
        - 홈
      summary: 문제 유형 조회
      description: >
        typeLevel 따라 문제 유형을 조회합니다.
        
        - `1`: 대분류 문제 유형 조회 (`parentTypeId` 필요 없음)
        - `2`: 중분류 문제 유형 조회 (`parentTypeId` 쿼리 파라미터 필요)
        - `3`: 소분류 문제 유형 조회 (`parentTypeId` 쿼리 파라미터 필요)
      parameters:
        - in: path
          name: typeLevel
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
          description: >
            조회할 문제 유형 ID:
            - `1`: 대분류 문제 유형
            - `2`: 중분류 문제 유형
            - `3`: 소분류 문제 유형
        - in: query
          name: parentTypeId
          required: false
          schema:
            type: integer
          description: 상위 문제 유형의 ID
      responses:
        '200':
          description: 문제 유형 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: array
                    items:
                        type: object
                        properties:
                          typeId:
                            type: integer
                            description: 유형 ID
                            example: 1
                          typeName:
                            type: string
                            description: 대분류 이름
                            example: "국어"
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
  
  /problems/types/{typeId}:
    delete:
      tags:
        - 홈
      summary: 문제 유형 삭제
      description: >
        문제 유형을 삭제합니다.
        
        - `typeLevel`이 `1`일 경우: 대분류 문제 유형 삭제 (관련된 중분류 및 소분류도 함께 삭제)
        - `typeLevel`이 `2`일 경우: 중분류 문제 유형 삭제 (관련된 소분류도 함께 삭제)
        - `typeLevel`이 `3`일 경우: 소분류 문제 유형 삭제 (해당 소분류만 삭제)
      parameters:
        - in: path
          name: typeId
          required: true
          schema:
            type: integer
          description: 삭제할 문제 유형의 ID
        - in: query
          name: typeLevel
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
            description: 문제 유형 레벨
      responses:
        '200':
          description: 문제 유형 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: string
                    example: "문제 유형 삭제 성공"

        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"

        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "SERVER_ERROR"
                  message:
                    type: string
                    example: "서버 오류"
                  result:
                    type: string
                    example: "서버 오류 발생"
  /problems/search:
    get:
      summary: 문제 검색하기 (구독)
      description: 전체 문제 또는 특정 폴더 안 문제를 검색합니다. `folderId` 파라미터가 제공되지 않으면 전체 문제를 검색하며, 제공되면 해당 폴더 내에서만 검색합니다.
      tags:
        - 홈
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
            description: 검색할 텍스트. 문제 텍스트에서 이 텍스트를 포함하는 문제를 찾습니다.
        - name: folderId
          in: query
          schema:
            type: string
            description: (선택 사항) 검색할 폴더의 ID. 이 파라미터가 제공되면 해당 폴더 내에서만 검색이 수행됩니다.
      responses:
        '200':
          description: 문제 검색 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "문제 검색 성공"
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        problemId:
                          type: string
                          description: 문제 ID
                        problemImage:
                          type: string
                          format: uri
                          description: 문제 이미지 URL
                        problemText:
                          type: string
                          description: 문제 텍스트
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "잘못된 요청 본문입니다."
        '403':
          description: 구독 계정이 아닐 경우 접근 거부
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "구독 계정만 이용 가능합니다."
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "데이터를 찾을 수 없습니다."

  /problems/{problemId}:
    get:
      summary: 문제 조회하기
      description: 문제의 세부 정보를 조회합니다.
      tags:
        - 홈
      parameters:
        - name: problemId
          in: path
          required: true
          schema:
            type: string
            description: 문제 ID
      responses:
        '200':
          description: 문제 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "문제 조회 성공"
                  result:
                    type: object
                    properties:
                      problemId:
                        type: string
                      memo:
                        type: string
                        description: 문제 추가 설명
                      problemText:
                        type: string
                        description: 문제 텍스트
                      folderName:
                        type: string
                        description: 폴더의 이름
                      problemImages:
                        type: string
                        description: 문제 유형 이미지 URL 배열
                      solutionImages:
                        type: array
                        items:
                          type: string
                          description: 풀이 유형 이미지 URL 배열
                      passageImages:
                        type: array
                        items:
                          type: string
                          description: 지문 유형 이미지 URL 배열
                      additionalProblemImages:
                        type: array
                        items:
                          type: string
                          description: 추가 문제 유형 이미지 URL 배열
                      gptSessionKey:
                        type: string
                        description: GPT 세션 키
                      problemType:
                        type: object
                        properties:
                          대분류:
                            type: string
                            description: 문제의 대분류 유형
                          중분류:
                            type: string
                            description: 문제의 중분류 유형
                          소분류:
                            type: string
                            description: 문제의 소분류 유형
                      statistics:
                        type: object
                        properties:
                          wrongCount:
                            type: integer
                            description: 틀린 횟수
                          solvedCount:
                            type: integer
                            description: 맞춘 횟수
        '403':
          description: 구독 계정이 아닐 경우 접근 거부
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "구독 계정만 이용 가능합니다."
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "데이터를 찾을 수 없습니다."
    delete:
      summary: 문제 삭제하기
      description: 문제 ID를 사용해 문제를 삭제한다.
      tags:
        - 홈
      parameters:
        - name: problemId
          in: path
          required: true
          schema:
            type: integer
            description: 문제 ID
            example: 1
      responses:
        '200':
          description: 문제 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  result:
                    type: string
                    example: "문제 삭제 성공"
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON001"
                  message:
                    type: string
                    example: "잘못된 요청입니다."
                  result:
                    type: string
                    example: "잘못된 요청 본문"
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: "COMMON005"
                  message:
                    type: string
                    example: "데이터를 찾을 수 없습니다."
                  result:
                    type: string
                    example: "데이터를 찾을 수 없습니다."


  /problems/edit:
    patch:
      summary: 문제 수정하기
      description: 문제의 세부 정보를 수정합니다.
      tags:
        - 홈
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                problemImage:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 문제 사진 (최소 1장 필수, 최대 1장)
                solutionImages:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 풀이 사진들 (최대 5장)
                passageImages:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 지문 사진들 (최대 10장)
                additionalImages:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 추가 사진들 (최대 2장)
                data:
                  type: string
                  description: 문제 정보(JSON 형식의 문자열)
                  example: |
                    {
                      "problemId": "1",
                      "problemText": "이것은 테스트 문제 텍스트입니다.",
                      "answer": "정답 예시",
                      "status": "active",
                      "memo": "이것은 문제에 대한 메모입니다.",
                      "mainTypeId": "2",
                      "midTypeId": "4",
                      "subTypeIds": ["7", "12"]
                    }
      responses:
        '200':
          description: 문제 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "문제 수정 성공"
                  result:
                    type: object
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "잘못된 요청 본문입니다."
        '403':
          description: 구독 계정이 아닐 경우 접근 거부
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "구독 계정만 이용 가능합니다."
        '404':
          description: 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "금지된 요청입니다."
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "데이터를 찾을 수 없습니다."